
CubeInc Unity Project to do list:

Completed:

-> base chunk generation
-> base physics
-> noclip
-> pause
-> wireframe
-> chunks store [][][] blocks
	-> air block used for empty space
-> jump forgiveness
-> letting go of jump will immediately drop down upward velocity
-> moving in air will have t increase slower
-> outline effect around selected voxel
-> raycast basic blocks to add or delete
-> m_lookBlock in its own class (code is a bit messy right now)
-> blocks only store only local position (no chunk/world)
-> streamline chunk/block classes

-> player stores chunk that it is currently in
-> create chunks around camera
-> only make chunks in view active
-> make chunk visibility check faster (just dot product)
-> use multithreading to generate chunks faster

-> scriptable objects for blocks
-> convert scriptable blocks to a giant texture atlas
-> generate uvs for voxels

-> fix texture bleeding with padding (padding = 1px per mipmap) + fix uvs for voxels with padding
-> merge block dictionary inside block manager

-> custom shader material for chunks

Phase 1:

-> figure out how to add custom attributes
-> ambient occlusion as custom attribute

-> import cubeinc textures

-> base perlin noise

-> custom block data for textures
-> custom block data imported in dictionary

Phase 2:

-> save changed chunks
-> transparency pass
-> custom lighting (store light level in block)
-> UI selection -> edit/add (Arrow/gunpowder)
-> commands
	-> Different tools
		-> shape: ball, square, line
		-> selection: (fill, delete, move, rotate, copy, paste)
		
-> Debug show vertex/face count per chunk
-> Logger class to keep track of how long specific actions took to complete
-> Profile
		
		